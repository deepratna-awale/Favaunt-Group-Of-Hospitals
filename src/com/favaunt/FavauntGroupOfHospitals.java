package com.favaunt;

import com.favaunt.data.DerbyConnection;
import com.favaunt.forms.DischargeForm;
import com.favaunt.forms.RegistrationForm;
import com.favaunt.services.AuthenticationService;
import com.favaunt.utils.UserRole;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author deepratnaawale
 */
public class FavauntGroupOfHospitals extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(FavauntGroupOfHospitals.class.getName());

    private final AuthenticationService authenticationService;
    private String access;

    /**
     * Creates new form FavauntGroupOfHospitals
     */
    public FavauntGroupOfHospitals() {
        authenticationService = new AuthenticationService();
        initComponents();
        // COMMENT: Why is this panel invisible again? What if I need to do a new registration in your application?
        queryPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        userName = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        designation = new javax.swing.JComboBox();
        loginBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        passwordLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        queryPanel = new javax.swing.JPanel();
        registerationBtn = new javax.swing.JButton();
        dischargeBtn = new javax.swing.JButton();
        enquiryBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Favaunt Group of Hospital");
        setBackground(new java.awt.Color(0, 51, 102));
        setResizable(false);

        panelName.setForeground(new java.awt.Color(51, 153, 255));
        panelName.setText("LOGIN REQUIRED");

        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        designation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Receptionist", "Doctor", "Nurse", "Admin" }));
        designation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designationActionPerformed(evt);
            }
        });

        loginBtn.setText("LOGIN");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        resetBtn.setText("RESET");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        logout.setText("LOGOUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(loginBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logout)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userName)
                            .addComponent(designation, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(password, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginBtn)
                    .addComponent(resetBtn)
                    .addComponent(logout))
                .addContainerGap())
        );

        passwordLabel.setText("Password:");

        userNameLabel.setText("User Name:");

        jLabel1.setText("Designation:");

        registerationBtn.setText("Registeration");
        registerationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerationBtnActionPerformed(evt);
            }
        });

        dischargeBtn.setText("Discharge");
        dischargeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dischargeBtnActionPerformed(evt);
            }
        });

        enquiryBtn.setText("Enquiry");
        enquiryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enquiryBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout queryPanelLayout = new javax.swing.GroupLayout(queryPanel);
        queryPanel.setLayout(queryPanelLayout);
        queryPanelLayout.setHorizontalGroup(
            queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanelLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(dischargeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registerationBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enquiryBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        queryPanelLayout.setVerticalGroup(
            queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(registerationBtn)
                .addGap(18, 18, 18)
                .addComponent(dischargeBtn)
                .addGap(18, 18, 18)
                .addComponent(enquiryBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userNameLabel)
                            .addComponent(jLabel1)
                            .addComponent(passwordLabel))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(panelName)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(queryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(passwordLabel)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)))
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addComponent(queryPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameActionPerformed

    // COMMENT: Too much code in single method which is not this method's job to perform.
    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        try {
            /*
             * // COMMENT: Although SQL Queries are case-insensitive it is good to follow the uppercase-keywords
             * and lowercase-db-entities format. See example in comment below.
             *
             * E.g.: SELECT * FROM users WHERE userName = ? AND userPassword = ? AND userDesignation = ?
             *
             * NOTE: Also as SQL and database are case-insensitive we don't have a camel casing in column names
             * as well. Try creating column names separated with underscore (_).
             *
             * E.g: SELECT * FROM users WHERE user_name = ? AND user_password = ? AND user_designation = ?
             *
             * Above example is a more cleaner way to write SQL Queries.
             */
            final PreparedStatement statement = DerbyConnection.getPreparedStatement("Select * from USERS where userName = ? and userPassword = ? and userDesignation = ?");

            /**
             * // COMMENT: This statement is not getting executed ever in this
             * code.
             *
             * Even if this statement did execute what it will do is it will
             * update the login timestamp for all the users in the database.
             *
             * @see AuthenticationService#updateLoginTimestamp
             */
            final PreparedStatement timestatement = DerbyConnection.getPreparedStatement("Insert  into USERS(userLoginTime, userLogout) values (?,?)");

            statement.setString(1, userName.getText());
            statement.setString(2, password.getText());
            statement.setString(3, (String) designation.getSelectedItem());

            access = (String) designation.getSelectedItem();

            final ResultSet resultSet = statement.executeQuery();
            password.setText("");

            if (resultSet.next()) {
                JOptionPane.showMessageDialog(this, "Login Successful.");
                timestatement.setTimestamp(1, new Timestamp(System.currentTimeMillis()));
                queryPanel.setVisible(true);

                handleUserRoleAccess();
            } else {
                JOptionPane.showMessageDialog(this, "Login Attempt Unsuccessful.");
            }
        } catch (final SQLException ex) {
            logger.log(Level.SEVERE, "Exception while logging in :: ", ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        // COMMENT: Above functionality can be broken down in the following way. #SeparationOfConcerns
//        try {
//            access = (String) designation.getSelectedItem();
//            password.setText("");
//            boolean isValidLogin = authenticationService.isValidLogin(userName.getText(), new String(password.getPassword()), access);
//            if (isValidLogin) {
//                JOptionPane.showMessageDialog(this, "Login Successful.");
//                queryPanel.setVisible(true);
//                handleUserRoleAccess();
//            } else {
//                JOptionPane.showMessageDialog(this, "Login Attempt Unsuccessful.");
//            }
//        } catch (final SQLException ex) {
//            logger.log(Level.SEVERE, "Exception while logging in :: ", ex);
//            JOptionPane.showMessageDialog(this, ex.getMessage());
//        }
    }//GEN-LAST:event_loginBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        userName.setText("");
        password.setText("");
    }//GEN-LAST:event_resetBtnActionPerformed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    private void designationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_designationActionPerformed

    private void enquiryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enquiryBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enquiryBtnActionPerformed

    private void dischargeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dischargeBtnActionPerformed
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(() -> {
            new DischargeForm().setVisible(true);
        });
    }//GEN-LAST:event_dischargeBtnActionPerformed

    private void registerationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerationBtnActionPerformed
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RegistrationForm().setVisible(true);
        });
    }//GEN-LAST:event_registerationBtnActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        try {
            // COMMENT: Why do we need this statement? Logout is a simple process where you are not meant to fetch any data.
            final PreparedStatement statement = DerbyConnection.getPreparedStatement("Select * from USERS where userName = ? and userPassword = ? and userDesignation = ?");
            final PreparedStatement timestatement = DerbyConnection.getPreparedStatement("Insert  into USERS(userLoginTime, userLogout) values (?,?)");
            statement.setString(1, userName.getText());
            statement.setString(2, password.getText());
            statement.setString(3, (String) designation.getSelectedItem());

            final String currentAccess = (String) designation.getSelectedItem();
            final ResultSet result = statement.executeQuery();

            password.setText("");

            if (result.next()) {
                if (access.equals(currentAccess) || currentAccess.equals("Admin")) {
                    JOptionPane.showMessageDialog(this, "You logged out successfully!");
                    timestatement.setTimestamp(2, new Timestamp(System.currentTimeMillis()));
                    loginBtn.setEnabled(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Username or Password is incorrect. Or you are not Authorised to Log Out.");
            }
            //COMMENT: Catch specific exceptions.
            /**
             * @see FavauntGroupOfHospitals#loginActionPerformed
             */
        } catch (Exception e) {
            // COMMENT: Who shows exception in message dialog? This is done iff you are developing for a developer.
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * Manages UI elements w.r.t. User Role access managed using enums.
     *
     * @see UserRole
     */
    private void handleUserRoleAccess() {
        final UserRole userRole = UserRole.getUserRole(access);
        switch (userRole) {
            case RECEPTIONIST:
                dischargeBtn.setEnabled(false);
                break;
            case NURSE:
                dischargeBtn.setEnabled(false);
                registerationBtn.setEnabled(false);
                break;
            case ADMIN:
                loginBtn.setEnabled(false);
                break;
            case DOCTOR:
                loginBtn.setEnabled(false);
                break;
            case UNKNOWN:
            default:
                loginBtn.setEnabled(false);
                dischargeBtn.setEnabled(false);
                registerationBtn.setEnabled(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FavauntGroupOfHospitals.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FavauntGroupOfHospitals().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox designation;
    private javax.swing.JButton dischargeBtn;
    private javax.swing.JButton enquiryBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton loginBtn;
    private javax.swing.JButton logout;
    private javax.swing.JLabel panelName;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPanel queryPanel;
    private javax.swing.JButton registerationBtn;
    private javax.swing.JButton resetBtn;
    private javax.swing.JTextField userName;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables
}
